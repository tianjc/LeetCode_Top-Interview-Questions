class Solution {    
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> res=new ArrayList<>();
        Arrays.sort(nums);
        for(int i = 0; i < nums.length; i++){
            //当固定的数>0的时候跳出循环
            if(nums[i] > 0){
                break;
            }
            //去除重复项，注意边界条件
            if(i > 0 && nums[i] == nums[i - 1]){
                continue;
            }
            
            int left = i + 1, right = nums.length - 1;
            int complement = 0 - nums[i];
            
            
            while(left < right){
                List<Integer> list = new ArrayList();
                if(nums[left] + nums[right] == complement){
                    //当相等时，将元素放入item
                    List<Integer> item = Arrays.asList(nums[i], nums[left], nums[right]);
                    res.add(item);
                    //当左边重复时，左指针右移
                    while(left < right && nums[left] == nums[left + 1]){
                        left++;
                    }
                    //右边重复时，右指针左移
                    while(left < right && nums[right] == nums[right - 1]){
                        right--;
                    }
                    //当找到一组数时，将左右指针向中间移
                    right--;
                    left++;
                }else if(nums[left] + nums[right] > complement){
                    right--;
                }else{
                    left++;
                }
            }
        }
        return res;
    }
}
